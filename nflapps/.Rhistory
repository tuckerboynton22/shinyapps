library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Old Faithful Geyser Data"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$distPlot <- renderPlot({
# generate bins based on input$bins from ui.R
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
# draw the histogram with the specified number of bins
hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='tuckerboynton',
token='DAE9DDF4A4DBE2F1A62B5CAC5191FA2F',
secret='<SECRET>')
shiny::runApp()
rsconnect::setAccountInfo(name='tuckerboynton',
token='DAE9DDF4A4DBE2F1A62B5CAC5191FA2F',
secret='iswHf9HGvtAag1rxDypdFwkaTr7o/oPBd4RNleJK')
library(rsconnect)
rsconnect::deployApp('/Users/tuckerboynton/Desktop/R/nflapps/app.R')
rsconnect::deployApp('/Users/tuckerboynton/Desktop/R/nflapps/')
rsconnect::deployApp('/Users/tuckerboynton/Desktop/R/nflapps/')
rsconnect::deployApp('/Users/tuckerboynton/Desktop/R/nflapps/')
rsconnect::deployApp('/Users/tuckerboynton/Desktop/R/nflapps/')
runApp()
runApp()
rsconnect::deployApp('/Users/tuckerboynton/Desktop/R/nflapps/')
runApp()
runApp()
runApp()
rsconnect::deployApp('/Users/tuckerboynton/Desktop/R/nflapps/')
library(reactable)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp('/Users/tuckerboynton/Desktop/R/nflapps/')
runApp()
runApp()
rsconnect::deployApp('/Users/tuckerboynton/Desktop/R/nflapps/')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data <- readRDS(url(paste0('https://raw.githubusercontent.com/guga31bb/nflfastR-data/master/data/play_by_play_2020.rds')))
passers <- data %>%
filter(down <= 4, down >= 1, !is.na(name), !is.na(qb_epa), pass == 1 | rush == 1,
week >= 1, week <= 21, ydstogo >= 0, ydstogo <= 99,
qtr >= 6, qtr <= 4, score_differential >= -60, score_differential <= 60,
!is.na(qb_epa)) %>%
group_by(name) %>%
summarize(
Plays = n(),
Dropbacks = sum(pass),
Sacks = round(mean(qb_epa * sack), digits = 3),
Scrambles = round(mean(qb_epa * qb_scramble), digits = 3),
Rushes = round(mean(qb_epa * rush), 3),
Passes = round(mean(qb_epa * pass - qb_epa * qb_scramble - qb_epa * sack), 3),
Total = round(mean(qb_epa), 3)
) %>%
filter(Dropbacks >= dbs) %>%
arrange(desc(Total)) %>%
rename(Quarterback = name)
reactable(passers,
pagination = FALSE,
defaultSorted = "Total",
defaultSortOrder = "desc",
columns = list(
Quarterback = colDef(minWidth = 150, footer = "Average"),
Total = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Total)) / (max(passers$Total) - min(passers$Total))
color <- GnYlRd(255)
list(background = color)
}),
Scrambles = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Scrambles)) / (max(passers$Scrambles) - min(passers$Scrambles))
color <- GnYlRd(255)
list(background = color)
}),
Sacks = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Sacks)) / (max(passers$Sacks) - min(passers$Sacks))
color <- GnYlRd(255)
list(background = color)
}),
Rushes = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Rushes)) / (max(passers$Rushes) - min(passers$Rushes))
color <- GnYlRd(255)
list(background = color)
}),
Passes = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Passes)) / (max(passers$Passes) - min(passers$Passes))
color <- GnYlRd(255)
list(background = color)
}),
Plays = colDef(align = "center"),
Dropbacks = colDef(align = "center")
),
defaultColDef = colDef(footerStyle = list(fontWeight = "bold")),
fullWidth = TRUE,
bordered = TRUE)
passers <- data %>%
filter(down <= 4, down >= 1, !is.na(name), !is.na(qb_epa), pass == 1 | rush == 1,
week >= 1, week <= 21, ydstogo >= 0, ydstogo <= 99,
qtr >= 6, qtr <= 4, score_differential >= -60, score_differential <= 60,
!is.na(qb_epa)) %>%
group_by(name) %>%
summarize(
Plays = n(),
Dropbacks = sum(pass),
Sacks = round(mean(qb_epa * sack), digits = 3),
Scrambles = round(mean(qb_epa * qb_scramble), digits = 3),
Rushes = round(mean(qb_epa * rush), 3),
Passes = round(mean(qb_epa * pass - qb_epa * qb_scramble - qb_epa * sack), 3),
Total = round(mean(qb_epa), 3)
) %>%
filter(Dropbacks >= 300) %>%
arrange(desc(Total)) %>%
rename(Quarterback = name)
reactable(passers,
pagination = FALSE,
defaultSorted = "Total",
defaultSortOrder = "desc",
columns = list(
Quarterback = colDef(minWidth = 150, footer = "Average"),
Total = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Total)) / (max(passers$Total) - min(passers$Total))
color <- GnYlRd(255)
list(background = color)
}),
Scrambles = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Scrambles)) / (max(passers$Scrambles) - min(passers$Scrambles))
color <- GnYlRd(255)
list(background = color)
}),
Sacks = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Sacks)) / (max(passers$Sacks) - min(passers$Sacks))
color <- GnYlRd(255)
list(background = color)
}),
Rushes = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Rushes)) / (max(passers$Rushes) - min(passers$Rushes))
color <- GnYlRd(255)
list(background = color)
}),
Passes = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Passes)) / (max(passers$Passes) - min(passers$Passes))
color <- GnYlRd(255)
list(background = color)
}),
Plays = colDef(align = "center"),
Dropbacks = colDef(align = "center")
),
defaultColDef = colDef(footerStyle = list(fontWeight = "bold")),
fullWidth = TRUE,
bordered = TRUE)
GnYlRd <- function(x) rgb(colorRamp(c("#f87274", "#ffeb84", "#63be7b"))(x), maxColorValue = 255)
passers <- data %>%
filter(down <= 4, down >= 1, !is.na(name), !is.na(qb_epa), pass == 1 | rush == 1,
week >= 1, week <= 21, ydstogo >= 0, ydstogo <= 99,
qtr >= 6, qtr <= 4, score_differential >= -60, score_differential <= 60,
!is.na(qb_epa)) %>%
group_by(name) %>%
summarize(
Plays = n(),
Dropbacks = sum(pass),
Sacks = round(mean(qb_epa * sack), digits = 3),
Scrambles = round(mean(qb_epa * qb_scramble), digits = 3),
Rushes = round(mean(qb_epa * rush), 3),
Passes = round(mean(qb_epa * pass - qb_epa * qb_scramble - qb_epa * sack), 3),
Total = round(mean(qb_epa), 3)
) %>%
filter(Dropbacks >= 300) %>%
arrange(desc(Total)) %>%
rename(Quarterback = name)
reactable(passers,
pagination = FALSE,
defaultSorted = "Total",
defaultSortOrder = "desc",
columns = list(
Quarterback = colDef(minWidth = 150, footer = "Average"),
Total = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Total)) / (max(passers$Total) - min(passers$Total))
color <- GnYlRd(255)
list(background = color)
}),
Scrambles = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Scrambles)) / (max(passers$Scrambles) - min(passers$Scrambles))
color <- GnYlRd(255)
list(background = color)
}),
Sacks = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Sacks)) / (max(passers$Sacks) - min(passers$Sacks))
color <- GnYlRd(255)
list(background = color)
}),
Rushes = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Rushes)) / (max(passers$Rushes) - min(passers$Rushes))
color <- GnYlRd(255)
list(background = color)
}),
Passes = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Passes)) / (max(passers$Passes) - min(passers$Passes))
color <- GnYlRd(255)
list(background = color)
}),
Plays = colDef(align = "center"),
Dropbacks = colDef(align = "center")
),
defaultColDef = colDef(footerStyle = list(fontWeight = "bold")),
fullWidth = TRUE,
bordered = TRUE)
View(data)
View(passers)
passers <- data %>%
filter(down <= 4, down >= 1, !is.na(name), !is.na(qb_epa), pass == 1 | rush == 1,
week >= 1, week <= 21, ydstogo >= 0, ydstogo <= 99,
qtr >= 6, qtr <= 4, score_differential >= -60, score_differential <= 60,
!is.na(qb_epa)) %>%
group_by(name) %>%
summarize(
Plays = n(),
Dropbacks = sum(pass),
Sacks = round(mean(qb_epa * sack), digits = 3),
Scrambles = round(mean(qb_epa * qb_scramble), digits = 3),
Rushes = round(mean(qb_epa * rush), 3),
Passes = round(mean(qb_epa * pass - qb_epa * qb_scramble - qb_epa * sack), 3),
Total = round(mean(qb_epa), 3)
) %>%
filter() %>%
arrange(desc(Total)) %>%
rename(Quarterback = name)
passers <- data %>%
filter(down <= 4, down >= 1, !is.na(name), !is.na(qb_epa), pass == 1 | rush == 1,
week >= 1, week <= 21, ydstogo >= 0, ydstogo <= 99,
qtr >= 1, qtr <= 6, score_differential >= -60, score_differential <= 60) %>%
group_by(name) %>%
summarize(
Plays = n(),
Dropbacks = sum(pass),
Sacks = round(mean(qb_epa * sack), digits = 3),
Scrambles = round(mean(qb_epa * qb_scramble), digits = 3),
Rushes = round(mean(qb_epa * rush), 3),
Passes = round(mean(qb_epa * pass - qb_epa * qb_scramble - qb_epa * sack), 3),
Total = round(mean(qb_epa), 3)
) %>%
filter(Dropbacks >= 300) %>%
arrange(desc(Total)) %>%
rename(Quarterback = name)
reactable(passers,
pagination = FALSE,
defaultSorted = "Total",
defaultSortOrder = "desc",
columns = list(
Quarterback = colDef(minWidth = 150, footer = "Average"),
Total = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Total)) / (max(passers$Total) - min(passers$Total))
color <- GnYlRd(255)
list(background = color)
}),
Scrambles = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Scrambles)) / (max(passers$Scrambles) - min(passers$Scrambles))
color <- GnYlRd(255)
list(background = color)
}),
Sacks = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Sacks)) / (max(passers$Sacks) - min(passers$Sacks))
color <- GnYlRd(255)
list(background = color)
}),
Rushes = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Rushes)) / (max(passers$Rushes) - min(passers$Rushes))
color <- GnYlRd(255)
list(background = color)
}),
Passes = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Passes)) / (max(passers$Passes) - min(passers$Passes))
color <- GnYlRd(255)
list(background = color)
}),
Plays = colDef(align = "center"),
Dropbacks = colDef(align = "center")
),
defaultColDef = colDef(footerStyle = list(fontWeight = "bold")),
fullWidth = TRUE,
bordered = TRUE)
reactable(passers,
pagination = FALSE,
defaultSorted = "Total",
defaultSortOrder = "desc",
columns = list(
Quarterback = colDef(minWidth = 150, footer = "Average"),
Total = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Total)) / (max(passers$Total) - min(passers$Total))
color <- GnYlRd(1)
list(background = color)
}),
Scrambles = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Scrambles)) / (max(passers$Scrambles) - min(passers$Scrambles))
color <- GnYlRd(1)
list(background = color)
}),
Sacks = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Sacks)) / (max(passers$Sacks) - min(passers$Sacks))
color <- GnYlRd(1)
list(background = color)
}),
Rushes = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Rushes)) / (max(passers$Rushes) - min(passers$Rushes))
color <- GnYlRd(1)
list(background = color)
}),
Passes = colDef(footer = function(values) sprintf("%.3f", mean(values)), format = colFormat(digits = 3), align = "center",
style = function(value) {
if (!is.numeric(value)) return()
# normalized <- (value - min(passers$Passes)) / (max(passers$Passes) - min(passers$Passes))
color <- GnYlRd(1)
list(background = color)
}),
Plays = colDef(align = "center"),
Dropbacks = colDef(align = "center")
),
defaultColDef = colDef(footerStyle = list(fontWeight = "bold")),
fullWidth = TRUE,
bordered = TRUE)
View(passers)
passers <- data %>%
filter(down <= 4, down >= 1, !is.na(name), !is.na(qb_epa), pass == 1 | rush == 1,
week >= 1, week <= 21, ydstogo >= 0, ydstogo <= 99,
qtr >= 1, qtr <= 6, score_differential >= -60, score_differential <= 60) %>%
group_by(name) %>%
summarize(
Plays = n(),
Dropbacks = sum(pass),
Sacks = round(mean(qb_epa * sack, na.rm = T), digits = 3),
Scrambles = round(mean(qb_epa * qb_scramble), digits = 3),
Rushes = round(mean(qb_epa * rush), 3),
Passes = round(mean(qb_epa * pass - qb_epa * qb_scramble - qb_epa * sack), 3),
Total = round(mean(qb_epa), 3)
) %>%
filter(Dropbacks >= 300) %>%
arrange(desc(Total)) %>%
rename(Quarterback = name)
passers <- data %>%
filter(down <= 4, down >= 1, !is.na(name), !is.na(qb_epa), pass == 1 | rush == 1,
week >= 1, week <= 21, ydstogo >= 0, ydstogo <= 99,
qtr >= 1, qtr <= 6, score_differential >= -60, score_differential <= 60) %>%
group_by(name) %>%
summarize(
Plays = n(),
Dropbacks = sum(pass, na.rm = T),
Sacks = round(mean(qb_epa * sack, na.rm = T), digits = 3),
Scrambles = round(mean(qb_epa * qb_scramble, na.rm = T), digits = 3),
Rushes = round(mean(qb_epa * rush, na.rm = T), 3),
Passes = round(mean(qb_epa * pass - qb_epa * qb_scramble - qb_epa * sack, na.rm = T), 3),
Total = round(mean(qb_epa, na.rm = T), 3)
) %>%
filter(Dropbacks >= 300) %>%
arrange(desc(Total)) %>%
rename(Quarterback = name)
runApp()
runApp()
runApp()
runApp()
